import numpy as np
from sklearn.tree import DecisionTreeRegressor

import numpy as np
import matplotlib.pyplot as plt
import pandas as pd
import sklearn

from sklearn.preprocessing import StandardScaler
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import LabelEncoder

from google.colab import files
uploaded = files.upload()

import io
df = pd.read_excel(io.BytesIO(uploaded['Solardata_1.xlsx']))
print(df)

df.head()
df.dtypes

df.dtypes
for x in df:
    if df[x].dtypes == "int64":
        df[x] = df[x].astype(float)
        print (df[x].dtypes)

df = df.select_dtypes(exclude=['object'])
df=df.fillna(df.mean())
X = df.drop('Power',axis=1)
y = df['Power']

from sklearn.model_selection import train_test_split
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size = 0.20, random_state = 0)

# Fit regression model
regr = DecisionTreeRegressor(max_depth=2)

regr.fit(X, y)

# Model making a prediction on test data
prediction = regr.predict(X_test)

print(prediction)

y_pred = regr.predict([[27.0,70.0]])
res = np.round(y_pred,2)

print(res)
